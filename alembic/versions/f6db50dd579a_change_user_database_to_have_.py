"""Change user database to have information about number of events

Revision ID: f6db50dd579a
Revises: e72f9c4b85da
Create Date: 2025-07-19 15:14:56.712589

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f6db50dd579a'
down_revision: Union[str, None] = 'e72f9c4b85da'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('events', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               comment='Timestamp of when the record was created',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('events', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               comment='Timestamp of when the record was last updated',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.add_column('users', sa.Column('number_events_hosted', sa.Integer(), nullable=False,server_default="0"))
    op.add_column('users', sa.Column('number_events_attended', sa.Integer(), nullable=False,server_default="0"))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'number_events_attended')
    op.drop_column('users', 'number_events_hosted')
    op.alter_column('events', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='Timestamp of when the record was last updated',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('events', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='Timestamp of when the record was created',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###
